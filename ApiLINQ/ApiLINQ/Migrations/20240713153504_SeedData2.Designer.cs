// <auto-generated />
using System;
using ApiLINQ;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiLINQ.Migrations
{
    [DbContext(typeof(EmpresaContext))]
    [Migration("20240713153504_SeedData2")]
    partial class SeedData2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiLINQ.Models.Ciudad", b =>
                {
                    b.Property<int>("idCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCiudad"));

                    b.Property<string>("nombreCiudad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("idCiudad");

                    b.ToTable("Ciudad", (string)null);

                    b.HasData(
                        new
                        {
                            idCiudad = 1,
                            nombreCiudad = "Leon"
                        },
                        new
                        {
                            idCiudad = 2,
                            nombreCiudad = "Puri"
                        },
                        new
                        {
                            idCiudad = 3,
                            nombreCiudad = "Silao"
                        });
                });

            modelBuilder.Entity("ApiLINQ.Models.Departamento", b =>
                {
                    b.Property<int>("idDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDepartamento"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreDepartamento")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("idDepartamento");

                    b.ToTable("Departamento", (string)null);

                    b.HasData(
                        new
                        {
                            idDepartamento = 1,
                            descripcion = "Aqui hacen tickets Jaja (Mucho ojo con la Coordi).",
                            nombreDepartamento = "Tickets"
                        },
                        new
                        {
                            idDepartamento = 2,
                            descripcion = "Aqui hacen cosas de Logistica Duh!",
                            nombreDepartamento = "Logistica"
                        },
                        new
                        {
                            idDepartamento = 3,
                            descripcion = "Aqui hacen Pan, o no se, nunca le supe a la administracion.",
                            nombreDepartamento = "Administrativo"
                        });
                });

            modelBuilder.Entity("ApiLINQ.Models.Empleado", b =>
                {
                    b.Property<int>("idEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEmpleado"));

                    b.Property<DateTime>("fechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("idCiudad")
                        .HasColumnType("int");

                    b.Property<string>("nombreEmpleado")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("puesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("sueldo")
                        .HasColumnType("float");

                    b.HasKey("idEmpleado");

                    b.HasIndex("idCiudad");

                    b.ToTable("Empleado", (string)null);

                    b.HasData(
                        new
                        {
                            idEmpleado = 1,
                            fechaIngreso = new DateTime(2024, 7, 13, 9, 35, 3, 386, DateTimeKind.Local).AddTicks(39),
                            idCiudad = 1,
                            nombreEmpleado = "Mario Zuniga",
                            puesto = "Desarrollador",
                            sueldo = 1600.0
                        },
                        new
                        {
                            idEmpleado = 2,
                            fechaIngreso = new DateTime(2024, 7, 13, 9, 35, 3, 386, DateTimeKind.Local).AddTicks(53),
                            idCiudad = 2,
                            nombreEmpleado = "Cristian Leyva",
                            puesto = "Desarrollador",
                            sueldo = 3200.0
                        },
                        new
                        {
                            idEmpleado = 3,
                            fechaIngreso = new DateTime(2024, 7, 13, 9, 35, 3, 386, DateTimeKind.Local).AddTicks(56),
                            idCiudad = 2,
                            nombreEmpleado = "Emmanuel Escobedo",
                            puesto = "Desarrollador",
                            sueldo = 3200.0
                        },
                        new
                        {
                            idEmpleado = 4,
                            fechaIngreso = new DateTime(2024, 7, 13, 9, 35, 3, 386, DateTimeKind.Local).AddTicks(58),
                            idCiudad = 3,
                            nombreEmpleado = "Brenda Gutierrez",
                            puesto = "Desarrollador",
                            sueldo = 3200.0
                        },
                        new
                        {
                            idEmpleado = 5,
                            fechaIngreso = new DateTime(2024, 7, 13, 9, 35, 3, 386, DateTimeKind.Local).AddTicks(60),
                            idCiudad = 1,
                            nombreEmpleado = "Pedro Morales",
                            puesto = "Desarrollador",
                            sueldo = 3200.0
                        },
                        new
                        {
                            idEmpleado = 6,
                            fechaIngreso = new DateTime(2024, 7, 13, 9, 35, 3, 386, DateTimeKind.Local).AddTicks(64),
                            idCiudad = 1,
                            nombreEmpleado = "Israel Lopez",
                            puesto = "Desarrollador",
                            sueldo = 3200.0
                        });
                });

            modelBuilder.Entity("ApiLINQ.Models.EmpleadoDepartamento", b =>
                {
                    b.Property<int>("idEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("idDepartamento")
                        .HasColumnType("int");

                    b.HasKey("idEmpleado", "idDepartamento");

                    b.HasIndex("idDepartamento");

                    b.ToTable("EmpleadoDepartamento", (string)null);

                    b.HasData(
                        new
                        {
                            idEmpleado = 1,
                            idDepartamento = 1
                        },
                        new
                        {
                            idEmpleado = 2,
                            idDepartamento = 1
                        },
                        new
                        {
                            idEmpleado = 3,
                            idDepartamento = 2
                        },
                        new
                        {
                            idEmpleado = 4,
                            idDepartamento = 2
                        },
                        new
                        {
                            idEmpleado = 5,
                            idDepartamento = 3
                        },
                        new
                        {
                            idEmpleado = 6,
                            idDepartamento = 3
                        });
                });

            modelBuilder.Entity("ApiLINQ.Models.Empleado", b =>
                {
                    b.HasOne("ApiLINQ.Models.Ciudad", "Ciudad")
                        .WithMany("Empleado")
                        .HasForeignKey("idCiudad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("ApiLINQ.Models.EmpleadoDepartamento", b =>
                {
                    b.HasOne("ApiLINQ.Models.Departamento", "Departamento")
                        .WithMany("EmpleadoDepartamentos")
                        .HasForeignKey("idDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiLINQ.Models.Empleado", "Empleado")
                        .WithMany("EmpleadoDepartamentos")
                        .HasForeignKey("idEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("ApiLINQ.Models.Ciudad", b =>
                {
                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("ApiLINQ.Models.Departamento", b =>
                {
                    b.Navigation("EmpleadoDepartamentos");
                });

            modelBuilder.Entity("ApiLINQ.Models.Empleado", b =>
                {
                    b.Navigation("EmpleadoDepartamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
